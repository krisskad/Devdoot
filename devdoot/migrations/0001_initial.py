# Generated by Django 3.2 on 2021-05-03 21:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name_plural': 'cities',
                'db_table': 'cities',
            },
        ),
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sortname', models.CharField(max_length=3)),
                ('name', models.CharField(max_length=150)),
                ('phonecode', models.IntegerField()),
            ],
            options={
                'verbose_name_plural': 'countries',
                'db_table': 'countries',
            },
        ),
        migrations.CreateModel(
            name='ExtendedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=260)),
                ('profession', models.CharField(max_length=100)),
                ('account_type', models.CharField(choices=[('individual', 'Individual'), ('group', 'Group')], max_length=10)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=1)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='belong_to_city', to='devdoot.cities')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('problem_title', models.CharField(max_length=100)),
                ('datetime', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PublicProblem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=260)),
                ('last_name', models.CharField(max_length=260)),
                ('mobile', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='from_city', to='devdoot.cities')),
                ('problem_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='has_problem', to='devdoot.problemtype')),
            ],
        ),
        migrations.CreateModel(
            name='States',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('country', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='unser_country', to='devdoot.countries')),
            ],
            options={
                'verbose_name_plural': 'states',
                'db_table': 'states',
            },
        ),
        migrations.CreateModel(
            name='SolvedProblem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('is_solved', models.BooleanField(default=0)),
                ('when', models.DateTimeField(auto_now=True)),
                ('solved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='problem_solved_by', to='devdoot.extendeduser')),
                ('solved_problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Solved_Public_Problem', to='devdoot.publicproblem')),
            ],
        ),
        migrations.AddField(
            model_name='publicproblem',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='from_state', to='devdoot.states'),
        ),
        migrations.CreateModel(
            name='ProblemReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=60)),
                ('description', models.CharField(max_length=260)),
                ('timestamp', models.DateTimeField(auto_now=True)),
                ('reported_to', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='devdoot.publicproblem')),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='devdoot.extendeduser')),
            ],
        ),
        migrations.AddField(
            model_name='extendeduser',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='belong_to_state', to='devdoot.states'),
        ),
        migrations.AddField(
            model_name='extendeduser',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='cities',
            name='state',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='under_state', to='devdoot.states'),
        ),
    ]
